#!/usr/bin/env python3
import os
import json
import argparse

F_SHELLCUTS = os.path.expanduser('~/.shellcuts.json')

def create_parser():
    parser = argparse.ArgumentParser()
    parser.add_argument('shellcut', default=None, nargs='?')
    parser.add_argument('-n', '--new')
    parser.add_argument('-d', '--delete')
    parser.add_argument('-p', '--print')
    parser.add_argument('-l', '--list', action='store_true')

    return parser

def load_shellcuts():
    try:
        with open(F_SHELLCUTS, 'r') as f:
            shellcuts = json.load(f)
    except FileNotFoundError:
        shellcuts = {}

    return shellcuts

def write_shellcuts(shellcuts):
    with open(F_SHELLCUTS, 'w') as f:
        json.dump(shellcuts, f)

def main():
    parser = create_parser()
    arguments = parser.parse_args()
    shellcuts = load_shellcuts()
    
    if arguments.delete or arguments.new:
        if arguments.delete:
            shellcuts.pop(arguments.delete, None)
        elif arguments.new:
            shellcuts[arguments.new] = os.getcwd()
        write_shellcuts(shellcuts)
        print("TERMINATE")

    elif arguments.print or arguments.list:
        print("PRINT")
        if arguments.print:
            try:
                print(arguments.print, ":", shellcuts[arguments.print])
            except KeyError:
                print("ERROR: That shellcut does not exist.")
        elif arguments.list:
            print("SHELLCUTS")
            for shellcut in shellcuts:
                print(shellcut, ":", shellcuts[shellcut])

    elif arguments.shellcut:
        try:
            shellcuts[arguments.shellcut]
            print("JUMP")
            print(shellcuts[arguments.shellcut])
        except KeyError:
            print("PRINT")
            print("ERROR: That shellcut does not exist.")

if __name__ == '__main__':
    main()
