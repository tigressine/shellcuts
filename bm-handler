#! /usr/bin/env python3
import os
import sys
import json

def command_delete(mark):
    marks.pop(mark, None)
    write_marks()

def command_help():
    print("Bashmarks Help")

def command_list():
    for mark in marks.keys():
        command_print(mark)

def command_new(mark):
    if mark != None:
        marks[mark] = os.getcwd()
        write_marks()
    else:
        print("ERROR 4: no name for new bashmark")

def command_print(mark):
    try:
        print(mark, ":", marks[mark])
    except KeyError:
        print("ERROR 1: bashmark '{0}' does not exist".format(mark))

def load_marks():
    try:
        with open(F_MARKS, 'r') as f:
            marks = json.load(f)
    except FileNotFoundError:
        marks = {}

    return marks

def parse_argv():
    try:
        flag, parameter = sys.argv[1], sys.argv[2]
    except IndexError:
        try:
            if sys.argv[1][0] == '-':
                flag, parameter = sys.argv[1], None
            else:
                flag, parameter = None, sys.argv[1]
        except IndexError:
            flag, parameter = '-h', None

    return flag, parameter

def write_marks():
    with open(F_MARKS, 'w') as f:
        json.dump(marks, f)

F_MARKS= os.path.expanduser('~/.bookmarks.json')

flag, parameter = parse_argv()
marks = load_marks()
flags = {'-d' : command_delete,
         '-h' : command_help,
         '-l' : command_list,
         '-n' : command_new,
         '-p' : command_print}

if flag in flags.keys():
    try:
        flags[flag](parameter)
    except TypeError:
        flags[flag]()
elif parameter in marks.keys():
    print(marks[parameter])
else:
    print(-1)
