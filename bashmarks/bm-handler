#! /usr/bin/env python3
import os
import json
import argparse

F_MARKS = os.path.expanduser('bashmarks.json')#

def create_parser():
    parser = argparse.ArgumentParser()
    parser.add_argument('mark', default=None, nargs='?')
    parser.add_argument('-n', '--new')
    parser.add_argument('-d', '--delete')
    parser.add_argument('-p', '--print')
    parser.add_argument('-l', '--list', action='store_true')

    return parser

def load_marks():
    try:
        with open(F_MARKS, 'r') as f:
            marks = json.load(f)
    except FileNotFoundError:
        marks = {}

    return marks

def write_marks(marks):
    with open(F_MARKS, 'w') as f:
        json.dump(marks, f)

def main():
    parser = create_parser()
    arguments = parser.parse_args()
    marks = load_marks()
    
    if arguments.mark:
        print(marks[arguments.mark])

    elif arguments.delete:
        marks.pop(arguments.delete, None)
        write_marks(marks)
        print("TERMINATED")

    elif arguments.new:
        marks[arguments.new] = os.getcwd()
        write_marks(marks)
        print("TERMINATED")

    elif arguments.print:
        try:
            print(arguments.print, ":", marks[arguments.print])
            print("TERMINATED")
        except KeyError:
            print("ERROR: That mark does not exist.")#

    elif arguments.list:
        print("BASHMARKS")
        for mark in marks:
            print(mark, ":", marks[mark])
        print("TERMINATED")

if __name__ == '__main__':
    main()
